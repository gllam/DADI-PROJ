// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/DIDAStorage.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

/// <summary>
/// this service specifies how to access the storage 
/// </summary>
public static partial class DIDAStorageService
{
  static readonly string __ServiceName = "DIDAStorageService";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAReadRequest> __Marshaller_DIDAReadRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAReadRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDARecordReply> __Marshaller_DIDARecordReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDARecordReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAWriteRequest> __Marshaller_DIDAWriteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAWriteRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAVersion> __Marshaller_DIDAVersion = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAVersion.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAUpdateIfRequest> __Marshaller_DIDAUpdateIfRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAUpdateIfRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::StorageStatusEmpty> __Marshaller_StorageStatusEmpty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StorageStatusEmpty.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::StorageStatusReply> __Marshaller_StorageStatusReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StorageStatusReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::ListServerStorageReply> __Marshaller_ListServerStorageReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ListServerStorageReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::sendUpdateRequestReq> __Marshaller_sendUpdateRequestReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sendUpdateRequestReq.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::sendUpdateRequestReply> __Marshaller_sendUpdateRequestReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sendUpdateRequestReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::sendUpdateAck> __Marshaller_sendUpdateAck = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sendUpdateAck.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::sendUpdateValidationReply> __Marshaller_sendUpdateValidationReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sendUpdateValidationReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::sendReadRequestReq> __Marshaller_sendReadRequestReq = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sendReadRequestReq.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::sendReadRequestReply> __Marshaller_sendReadRequestReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::sendReadRequestReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::gossipMessage> __Marshaller_gossipMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gossipMessage.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::EmptyAnswer> __Marshaller_EmptyAnswer = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::EmptyAnswer.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::DIDAReadRequest, global::DIDARecordReply> __Method_read = new grpc::Method<global::DIDAReadRequest, global::DIDARecordReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "read",
      __Marshaller_DIDAReadRequest,
      __Marshaller_DIDARecordReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::DIDAWriteRequest, global::DIDAVersion> __Method_write = new grpc::Method<global::DIDAWriteRequest, global::DIDAVersion>(
      grpc::MethodType.Unary,
      __ServiceName,
      "write",
      __Marshaller_DIDAWriteRequest,
      __Marshaller_DIDAVersion);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::DIDAUpdateIfRequest, global::DIDAVersion> __Method_updateIfValueIs = new grpc::Method<global::DIDAUpdateIfRequest, global::DIDAVersion>(
      grpc::MethodType.Unary,
      __ServiceName,
      "updateIfValueIs",
      __Marshaller_DIDAUpdateIfRequest,
      __Marshaller_DIDAVersion);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::StorageStatusEmpty, global::StorageStatusReply> __Method_Status = new grpc::Method<global::StorageStatusEmpty, global::StorageStatusReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "Status",
      __Marshaller_StorageStatusEmpty,
      __Marshaller_StorageStatusReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::StorageStatusEmpty, global::ListServerStorageReply> __Method_ListServer = new grpc::Method<global::StorageStatusEmpty, global::ListServerStorageReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "ListServer",
      __Marshaller_StorageStatusEmpty,
      __Marshaller_ListServerStorageReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::sendUpdateRequestReq, global::sendUpdateRequestReply> __Method_sendUpdateRequest = new grpc::Method<global::sendUpdateRequestReq, global::sendUpdateRequestReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "sendUpdateRequest",
      __Marshaller_sendUpdateRequestReq,
      __Marshaller_sendUpdateRequestReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::sendUpdateAck, global::sendUpdateValidationReply> __Method_sendUpdateValidation = new grpc::Method<global::sendUpdateAck, global::sendUpdateValidationReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "sendUpdateValidation",
      __Marshaller_sendUpdateAck,
      __Marshaller_sendUpdateValidationReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::sendReadRequestReq, global::sendReadRequestReply> __Method_sendReadRequest = new grpc::Method<global::sendReadRequestReq, global::sendReadRequestReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "sendReadRequest",
      __Marshaller_sendReadRequestReq,
      __Marshaller_sendReadRequestReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::gossipMessage, global::EmptyAnswer> __Method_gossip = new grpc::Method<global::gossipMessage, global::EmptyAnswer>(
      grpc::MethodType.Unary,
      __ServiceName,
      "gossip",
      __Marshaller_gossipMessage,
      __Marshaller_EmptyAnswer);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::DIDAStorageReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of DIDAStorageService</summary>
  [grpc::BindServiceMethod(typeof(DIDAStorageService), "BindService")]
  public abstract partial class DIDAStorageServiceBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::DIDARecordReply> read(global::DIDAReadRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::DIDAVersion> write(global::DIDAWriteRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::DIDAVersion> updateIfValueIs(global::DIDAUpdateIfRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::StorageStatusReply> Status(global::StorageStatusEmpty request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ListServerStorageReply> ListServer(global::StorageStatusEmpty request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    ///new functions
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::sendUpdateRequestReply> sendUpdateRequest(global::sendUpdateRequestReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    /// <summary>
    ///if the TimeStamp returned is null -> success!
    /// </summary>
    /// <param name="request">The request received from the client.</param>
    /// <param name="context">The context of the server-side call handler being invoked.</param>
    /// <returns>The response to send back to the client (wrapped by a task).</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::sendUpdateValidationReply> sendUpdateValidation(global::sendUpdateAck request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::sendReadRequestReply> sendReadRequest(global::sendReadRequestReq request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::EmptyAnswer> gossip(global::gossipMessage request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for DIDAStorageService</summary>
  public partial class DIDAStorageServiceClient : grpc::ClientBase<DIDAStorageServiceClient>
  {
    /// <summary>Creates a new client for DIDAStorageService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public DIDAStorageServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for DIDAStorageService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public DIDAStorageServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected DIDAStorageServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected DIDAStorageServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDARecordReply read(global::DIDAReadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return read(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDARecordReply read(global::DIDAReadRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_read, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDARecordReply> readAsync(global::DIDAReadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return readAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDARecordReply> readAsync(global::DIDAReadRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_read, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAVersion write(global::DIDAWriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return write(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAVersion write(global::DIDAWriteRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_write, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAVersion> writeAsync(global::DIDAWriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return writeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAVersion> writeAsync(global::DIDAWriteRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_write, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAVersion updateIfValueIs(global::DIDAUpdateIfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return updateIfValueIs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAVersion updateIfValueIs(global::DIDAUpdateIfRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_updateIfValueIs, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAVersion> updateIfValueIsAsync(global::DIDAUpdateIfRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return updateIfValueIsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAVersion> updateIfValueIsAsync(global::DIDAUpdateIfRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_updateIfValueIs, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::StorageStatusReply Status(global::StorageStatusEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return Status(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::StorageStatusReply Status(global::StorageStatusEmpty request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_Status, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::StorageStatusReply> StatusAsync(global::StorageStatusEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return StatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::StorageStatusReply> StatusAsync(global::StorageStatusEmpty request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_Status, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ListServerStorageReply ListServer(global::StorageStatusEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ListServer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ListServerStorageReply ListServer(global::StorageStatusEmpty request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_ListServer, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ListServerStorageReply> ListServerAsync(global::StorageStatusEmpty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ListServerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ListServerStorageReply> ListServerAsync(global::StorageStatusEmpty request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_ListServer, null, options, request);
    }
    /// <summary>
    ///new functions
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::sendUpdateRequestReply sendUpdateRequest(global::sendUpdateRequestReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendUpdateRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    ///new functions
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::sendUpdateRequestReply sendUpdateRequest(global::sendUpdateRequestReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_sendUpdateRequest, null, options, request);
    }
    /// <summary>
    ///new functions
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::sendUpdateRequestReply> sendUpdateRequestAsync(global::sendUpdateRequestReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendUpdateRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    ///new functions
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::sendUpdateRequestReply> sendUpdateRequestAsync(global::sendUpdateRequestReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_sendUpdateRequest, null, options, request);
    }
    /// <summary>
    ///if the TimeStamp returned is null -> success!
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The response received from the server.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::sendUpdateValidationReply sendUpdateValidation(global::sendUpdateAck request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendUpdateValidation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    ///if the TimeStamp returned is null -> success!
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The response received from the server.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::sendUpdateValidationReply sendUpdateValidation(global::sendUpdateAck request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_sendUpdateValidation, null, options, request);
    }
    /// <summary>
    ///if the TimeStamp returned is null -> success!
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
    /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
    /// <param name="cancellationToken">An optional token for canceling the call.</param>
    /// <returns>The call object.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::sendUpdateValidationReply> sendUpdateValidationAsync(global::sendUpdateAck request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendUpdateValidationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    /// <summary>
    ///if the TimeStamp returned is null -> success!
    /// </summary>
    /// <param name="request">The request to send to the server.</param>
    /// <param name="options">The options for the call.</param>
    /// <returns>The call object.</returns>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::sendUpdateValidationReply> sendUpdateValidationAsync(global::sendUpdateAck request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_sendUpdateValidation, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::sendReadRequestReply sendReadRequest(global::sendReadRequestReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendReadRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::sendReadRequestReply sendReadRequest(global::sendReadRequestReq request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_sendReadRequest, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::sendReadRequestReply> sendReadRequestAsync(global::sendReadRequestReq request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendReadRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::sendReadRequestReply> sendReadRequestAsync(global::sendReadRequestReq request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_sendReadRequest, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyAnswer gossip(global::gossipMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return gossip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::EmptyAnswer gossip(global::gossipMessage request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_gossip, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyAnswer> gossipAsync(global::gossipMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return gossipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::EmptyAnswer> gossipAsync(global::gossipMessage request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_gossip, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override DIDAStorageServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new DIDAStorageServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(DIDAStorageServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_read, serviceImpl.read)
        .AddMethod(__Method_write, serviceImpl.write)
        .AddMethod(__Method_updateIfValueIs, serviceImpl.updateIfValueIs)
        .AddMethod(__Method_Status, serviceImpl.Status)
        .AddMethod(__Method_ListServer, serviceImpl.ListServer)
        .AddMethod(__Method_sendUpdateRequest, serviceImpl.sendUpdateRequest)
        .AddMethod(__Method_sendUpdateValidation, serviceImpl.sendUpdateValidation)
        .AddMethod(__Method_sendReadRequest, serviceImpl.sendReadRequest)
        .AddMethod(__Method_gossip, serviceImpl.gossip).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, DIDAStorageServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_read, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DIDAReadRequest, global::DIDARecordReply>(serviceImpl.read));
    serviceBinder.AddMethod(__Method_write, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DIDAWriteRequest, global::DIDAVersion>(serviceImpl.write));
    serviceBinder.AddMethod(__Method_updateIfValueIs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DIDAUpdateIfRequest, global::DIDAVersion>(serviceImpl.updateIfValueIs));
    serviceBinder.AddMethod(__Method_Status, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StorageStatusEmpty, global::StorageStatusReply>(serviceImpl.Status));
    serviceBinder.AddMethod(__Method_ListServer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StorageStatusEmpty, global::ListServerStorageReply>(serviceImpl.ListServer));
    serviceBinder.AddMethod(__Method_sendUpdateRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sendUpdateRequestReq, global::sendUpdateRequestReply>(serviceImpl.sendUpdateRequest));
    serviceBinder.AddMethod(__Method_sendUpdateValidation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sendUpdateAck, global::sendUpdateValidationReply>(serviceImpl.sendUpdateValidation));
    serviceBinder.AddMethod(__Method_sendReadRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::sendReadRequestReq, global::sendReadRequestReply>(serviceImpl.sendReadRequest));
    serviceBinder.AddMethod(__Method_gossip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gossipMessage, global::EmptyAnswer>(serviceImpl.gossip));
  }

}
#endregion
